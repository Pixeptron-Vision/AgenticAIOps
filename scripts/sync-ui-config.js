#!/usr/bin/env node
/**
 * Sync UI Configuration from Backend .env
 *
 * This script reads the backend .env file and generates a runtime config
 * file for the UI at llmops-agent-ui/public/config.js
 *
 * Usage:
 *   node scripts/sync-ui-config.js
 *   npm run sync-config (from UI directory)
 */

const fs = require('fs');
const path = require('path');

// Paths
const BACKEND_ENV = path.join(__dirname, '..', '.env');
const UI_CONFIG = path.join(__dirname, '..', 'llmops-agent-ui', 'public', 'config.js');

/**
 * Parse .env file
 */
function parseEnvFile(filePath) {
  if (!fs.existsSync(filePath)) {
    console.error(`❌ Backend .env file not found: ${filePath}`);
    process.exit(1);
  }

  const content = fs.readFileSync(filePath, 'utf-8');
  const env = {};

  content.split('\n').forEach(line => {
    // Skip comments and empty lines
    if (line.startsWith('#') || !line.trim()) return;

    // Parse KEY=VALUE
    const match = line.match(/^([^=]+)=(.*)$/);
    if (match) {
      const key = match[1].trim();
      let value = match[2].trim();

      // Remove quotes if present
      if ((value.startsWith('"') && value.endsWith('"')) ||
          (value.startsWith("'") && value.endsWith("'"))) {
        value = value.slice(1, -1);
      }

      env[key] = value;
    }
  });

  return env;
}

/**
 * Generate UI config.js file
 */
function generateConfigFile(env) {
  const apiHost = env.API_HOST || '0.0.0.0';
  const apiPort = env.API_PORT || '8003';
  const environment = env.ENVIRONMENT || 'development';

  // Convert 0.0.0.0 to localhost for browser
  const browserHost = apiHost === '0.0.0.0' ? 'localhost' : apiHost;

  const config = {
    API_URL: `http://${browserHost}:${apiPort}`,
    WS_URL: `ws://${browserHost}:${apiPort}`,
    VERSION: '1.0.0',
    ENVIRONMENT: environment
  };

  const configContent = `/**
 * Runtime Configuration
 *
 * This file is loaded at runtime (not build time), allowing port changes
 * without rebuilding the UI.
 *
 * Auto-generated by: npm run sync-config
 * Last sync: ${new Date().toISOString()}
 * DO NOT EDIT MANUALLY - Changes will be overwritten
 */

window.__APP_CONFIG__ = ${JSON.stringify(config, null, 2)};
`;

  // Ensure public directory exists
  const publicDir = path.dirname(UI_CONFIG);
  if (!fs.existsSync(publicDir)) {
    fs.mkdirSync(publicDir, { recursive: true });
  }

  fs.writeFileSync(UI_CONFIG, configContent, 'utf-8');

  return config;
}

/**
 * Main
 */
function main() {
  console.log('🔄 Syncing UI config from backend .env...\n');

  // Parse backend .env
  const env = parseEnvFile(BACKEND_ENV);
  console.log(`✅ Parsed backend .env`);
  console.log(`   API_HOST: ${env.API_HOST || '0.0.0.0'}`);
  console.log(`   API_PORT: ${env.API_PORT || '8003'}\n`);

  // Generate UI config
  const config = generateConfigFile(env);
  console.log(`✅ Generated UI config at: ${UI_CONFIG}`);
  console.log(`   API_URL: ${config.API_URL}`);
  console.log(`   WS_URL: ${config.WS_URL}`);
  console.log(`   ENVIRONMENT: ${config.ENVIRONMENT}\n`);

  console.log('✨ Config sync complete!');
  console.log('   No UI rebuild required - just reload the page.\n');
}

main();
